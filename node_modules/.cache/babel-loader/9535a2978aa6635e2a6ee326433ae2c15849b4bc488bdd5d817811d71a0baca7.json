{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f74b70a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"init-movie\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"영화 초기 선택\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"평소 취향의 영화를 선택하십시오\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\",\n    \"no-gutters\": \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" 장르별 섹션 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: genre.name,\n        class: \"genre-col\"\n      }, [_createVNode(_component_v_row, {\n        class: \"genre-row\",\n        style: {\n          \"padding-left\": \"80px\",\n          \"padding-right\": \"80px\"\n        }\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 패딩 조절 \"), _createVNode(_component_v_col, null, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(genre.name) + \" Movies\", 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createCommentVNode(\" 포스터를 중앙 정렬 \"), _createVNode(_component_v_row, {\n        class: \"poster-row\",\n        style: {\n          \"padding-left\": \"160px\",\n          \"padding-right\": \"160px\"\n        }\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 패딩 조절 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genre.movies, movie => {\n          return _openBlock(), _createBlock(_component_v_col, {\n            key: movie.title,\n            cols: \"6\",\n            md: \"3\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              onClick: $event => $options.toggleSelection(movie),\n              class: _normalizeClass($options.isMovieSelected(movie) ? 'selected' : '')\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_img, {\n                src: movie.posterUrl,\n                \"aspect-ratio\": \"0.66\",\n                contain: \"\",\n                class: \"centered-img\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(movie.title), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"button-col\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.completeSelection,\n          color: \"gray\",\n          block: \"\",\n          large: \"\",\n          class: \"complete-btn\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 완료 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","fluid","default","_withCtx","_hoisted_1","_createCommentVNode","_createElementBlock","_Fragment","_renderList","$data","genres","genre","key","name","_createVNode","_component_v_row","style","_component_v_col","_toDisplayString","_","movies","movie","title","cols","md","_component_v_card","onClick","$event","$options","toggleSelection","_normalizeClass","isMovieSelected","_component_v_img","src","posterUrl","contain","_component_v_card_title","_createTextVNode","_component_v_btn","completeSelection","color","block","large"],"sources":["C:\\Users\\82105\\se_project\\src\\views\\Init_movie.vue"],"sourcesContent":["<template>\r\n  <v-container fluid no-gutters>\r\n    <div class=\"init-movie\">\r\n      <h1>영화 초기 선택</h1>\r\n      <p>평소 취향의 영화를 선택하십시오</p>\r\n    </div>\r\n\r\n    <!-- 장르별 섹션 -->\r\n    <div v-for=\"genre in genres\" :key=\"genre.name\" class=\"genre-col\">\r\n      <v-row class=\"genre-row\" style=\"padding-left: 80px; padding-right: 80px;\"> <!-- 패딩 조절 -->\r\n        <v-col>\r\n          <h2>{{ genre.name }} Movies</h2>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <!-- 포스터를 중앙 정렬 -->\r\n      <v-row class=\"poster-row\" style=\"padding-left: 160px; padding-right: 160px;\"> <!-- 패딩 조절 -->\r\n        <v-col v-for=\"movie in genre.movies\" :key=\"movie.title\" cols=\"6\" md=\"3\">\r\n          <v-card \r\n            @click=\"toggleSelection(movie)\" \r\n            :class=\"isMovieSelected(movie) ? 'selected' : ''\"\r\n          >\r\n            <v-img \r\n              :src=\"movie.posterUrl\" \r\n              aspect-ratio=\"0.66\"\r\n              contain\r\n              class=\"centered-img\"\r\n            >\r\n              <v-card-title>{{ movie.title }}</v-card-title>\r\n            </v-img>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n\r\n    <v-row>\r\n      <v-col class=\"button-col\">\r\n        <v-btn \r\n          @click=\"completeSelection\" \r\n          color=\"gray\"\r\n          block\r\n          large\r\n          class=\"complete-btn\"\r\n        >\r\n          완료\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { genres } from '@/data/genres';\r\n\r\nexport default {\r\n  name: 'Init_movie',\r\n  data() {\r\n    return {\r\n      genres,\r\n      selectedMovies: [],\r\n    };\r\n  },\r\n  methods: {\r\n    toggleSelection(movie) {\r\n      const index = this.selectedMovies.indexOf(movie.title);\r\n      if (index === -1) {\r\n        this.selectedMovies.push(movie.title);\r\n      } else {\r\n        this.selectedMovies.splice(index, 1);\r\n      }\r\n    },\r\n    isMovieSelected(movie) {\r\n      return this.selectedMovies.includes(movie.title);\r\n    },\r\n    completeSelection() {\r\n      console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.init-movie {\r\n  color: gray; \r\n  background-color: white; \r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.genre-col {\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.genre-row {\r\n  padding-left: 80px; /* 패딩 조절 */\r\n  padding-right: 80px; /* 패딩 조절 */\r\n}\r\n\r\n.poster-row {\r\n  padding-left: 80px; /* 패딩 조절 */\r\n  padding-right: 80px; /* 패딩 조절 */\r\n}\r\n\r\n.v-card {\r\n  cursor: pointer; \r\n  border: 1px solid #ccc; \r\n  padding: 10px; \r\n  text-align: center; \r\n}\r\n\r\n.centered-img {\r\n  display: block; \r\n  margin: auto; \r\n}\r\n\r\n.selected::after {\r\n  content: \"\"; \r\n  position: absolute; \r\n  top: 0; \r\n  left: 0;\r\n  right: 0; \r\n  bottom: 0; \r\n  background-color: rgba(0, 0, 0, 0.4); \r\n}\r\n\r\n.complete-btn {\r\n  display: block; \r\n  text-align: center; \r\n  padding: 10px;\r\n}\r\n\r\n.button-col {\r\n  padding-left: 100px; \r\n  padding-right: 100px; \r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAY,I,aACrBD,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAwB,WAArB,mBAAiB,E;;;;;;;;;uBAHxBE,YAAA,CA+CcC,sBAAA;IA/CDC,KAAK,EAAL,EAAK;IAAC,YAAU,EAAV;;IADrBC,OAAA,EAAAC,QAAA,CAEI,MAGM,CAHNC,UAGM,EAENC,mBAAA,YAAe,G,kBACfC,mBAAA,CAyBMC,SAAA,QAjCVC,WAAA,CAQyBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;2BAAjBL,mBAAA,CAyBM;QAzBwBM,GAAG,EAAED,KAAK,CAACE,IAAI;QAAEf,KAAK,EAAC;UACnDgB,YAAA,CAIQC,gBAAA;QAJDjB,KAAK,EAAC,WAAW;QAACkB,KAAgD,EAAhD;UAAA;UAAA;QAAA;;QAT/Bd,OAAA,EAAAC,QAAA,CASiF,MAAc,CAAdE,mBAAA,WAAc,EACvFS,YAAA,CAEQG,gBAAA;UAZhBf,OAAA,EAAAC,QAAA,CAWU,MAAgC,CAAhCN,mBAAA,CAAgC,YAAAqB,gBAAA,CAAzBP,KAAK,CAACE,IAAI,IAAG,SAAO,gB;UAXrCM,CAAA;;QAAAA,CAAA;oCAeMd,mBAAA,gBAAmB,EACnBS,YAAA,CAgBQC,gBAAA;QAhBDjB,KAAK,EAAC,YAAY;QAACkB,KAAkD,EAAlD;UAAA;UAAA;QAAA;;QAhBhCd,OAAA,EAAAC,QAAA,CAgBoF,MAAc,CAAdE,mBAAA,WAAc,G,kBAC1FC,mBAAA,CAcQC,SAAA,QA/BhBC,WAAA,CAiB+BG,KAAK,CAACS,MAAM,EAArBC,KAAK;+BAAnBtB,YAAA,CAcQkB,gBAAA;YAd8BL,GAAG,EAAES,KAAK,CAACC,KAAK;YAAEC,IAAI,EAAC,GAAG;YAACC,EAAE,EAAC;;YAjB5EtB,OAAA,EAAAC,QAAA,CAkBU,MAYS,CAZTW,YAAA,CAYSW,iBAAA;cAXNC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACR,KAAK;cAC5BvB,KAAK,EApBlBgC,eAAA,CAoBoBF,QAAA,CAAAG,eAAe,CAACV,KAAK;;cApBzCnB,OAAA,EAAAC,QAAA,CAsBY,MAOQ,CAPRW,YAAA,CAOQkB,gBAAA;gBANLC,GAAG,EAAEZ,KAAK,CAACa,SAAS;gBACrB,cAAY,EAAC,MAAM;gBACnBC,OAAO,EAAP,EAAO;gBACPrC,KAAK,EAAC;;gBA1BpBI,OAAA,EAAAC,QAAA,CA4Bc,MAA8C,CAA9CW,YAAA,CAA8CsB,uBAAA;kBA5B5DlC,OAAA,EAAAC,QAAA,CA4B4B,MAAiB,CA5B7CkC,gBAAA,CAAAnB,gBAAA,CA4B+BG,KAAK,CAACC,KAAK,iB;kBA5B1CH,CAAA;;gBAAAA,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;;;QAAAA,CAAA;;oCAmCIL,YAAA,CAYQC,gBAAA;MA/CZb,OAAA,EAAAC,QAAA,CAoCM,MAUQ,CAVRW,YAAA,CAUQG,gBAAA;QAVDnB,KAAK,EAAC;MAAY;QApC/BI,OAAA,EAAAC,QAAA,CAqCQ,MAQQ,CARRW,YAAA,CAQQwB,gBAAA;UAPLZ,OAAK,EAAEE,QAAA,CAAAW,iBAAiB;UACzBC,KAAK,EAAC,MAAM;UACZC,KAAK,EAAL,EAAK;UACLC,KAAK,EAAL,EAAK;UACL5C,KAAK,EAAC;;UA1ChBI,OAAA,EAAAC,QAAA,CA2CS,MAED,CA7CRkC,gBAAA,CA2CS,MAED,E;UA7CRlB,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}