{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f74b70a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"init-movie\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"영화 초기 선택\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"평소 취향의 영화를 선택하십시오\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"fixed-poster\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\",\n    \"no-gutters\": \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_img, {\n        src: $data.selectedPosterUrl,\n        \"aspect-ratio\": \"0.66\",\n        contain: \"\",\n        width: \"70px\"\n      }, null, 8 /* PROPS */, [\"src\"])]),\n      _: 1 /* STABLE */\n    })]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: genre.name,\n        class: \"genre-col\"\n      }, [_createVNode(_component_v_row, {\n        class: \"genre-row\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(genre.name), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, {\n        class: \"poster-row\",\n        justify: \"center\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genre.movies, movie => {\n          return _openBlock(), _createBlock(_component_v_col, {\n            key: movie.title,\n            cols: \"6\",\n            md: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              onClick: $event => $options.toggleSelection(movie),\n              class: _normalizeClass([$options.isMovieSelected(movie) ? 'selected' : '', \"centered-card\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_img, {\n                src: movie.posterUrl,\n                \"aspect-ratio\": \"0.66\",\n                contain: \"\",\n                class: \"centered-img\"\n              }, null, 8 /* PROPS */, [\"src\"]), _createVNode(_component_v_card_title, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(movie.title), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"button-col\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.completeSelection,\n          color: \"gray\",\n          block: \"\",\n          large: \"\",\n          class: \"complete-btn\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 완 료 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","fluid","default","_withCtx","_hoisted_1","_hoisted_2","_createVNode","_component_v_card","_component_v_img","src","$data","selectedPosterUrl","contain","width","_","_createElementBlock","_Fragment","_renderList","genres","genre","key","name","_component_v_row","_component_v_col","_toDisplayString","justify","movies","movie","title","cols","md","onClick","$event","$options","toggleSelection","_normalizeClass","isMovieSelected","posterUrl","_component_v_card_title","_createTextVNode","_component_v_btn","completeSelection","color","block","large"],"sources":["C:\\Users\\82105\\se_project\\src\\views\\Init_movie.vue"],"sourcesContent":["<template>\r\n    <v-container fluid no-gutters>\r\n      <div class=\"init-movie\">\r\n        <h1>영화 초기 선택</h1>\r\n        <p>평소 취향의 영화를 선택하십시오</p>\r\n      </div>\r\n\r\n      <div class=\"fixed-poster\">\r\n        <v-card>\r\n          <v-img\r\n            :src=\"selectedPosterUrl\"\r\n            aspect-ratio=\"0.66\"\r\n            contain\r\n            width=\"70px\"\r\n          >\r\n          </v-img>\r\n        </v-card>\r\n      </div>\r\n\r\n      <div v-for=\"genre in genres\" :key=\"genre.name\" class=\"genre-col\">\r\n        <v-row class=\"genre-row\">\r\n          <v-col>\r\n            <h2>{{ genre.name }}</h2>\r\n          </v-col>\r\n        </v-row>\r\n\r\n        <v-row class=\"poster-row\" justify=\"center\">\r\n          <v-col v-for=\"movie in genre.movies\" :key=\"movie.title\" cols=\"6\" md=\"2\">\r\n            <v-card \r\n              @click=\"toggleSelection(movie)\" \r\n              :class=\"isMovieSelected(movie) ? 'selected' : ''\"\r\n              class=\"centered-card\"\r\n              >\r\n              <v-img \r\n                :src=\"movie.posterUrl\" \r\n                aspect-ratio=\"0.66\"\r\n                contain\r\n                class=\"centered-img\"\r\n              />\r\n              <v-card-title>{{ movie.title }}</v-card-title>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </div>\r\n\r\n      <v-row>\r\n        <v-col class=\"button-col\">\r\n          <v-btn \r\n            @click=\"completeSelection\" \r\n            color=\"gray\"\r\n            block\r\n            large  \r\n            class=\"complete-btn\"\r\n          >\r\n            완 료\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { genres } from '@/data/genres';\r\n  export default {\r\n    name: 'Init_movie',\r\n    data() {\r\n        return {\r\n            genres,\r\n            selectedMovies: [],\r\n            selectedPosterUrl: ''\r\n        };\r\n    },\r\n    methods: {\r\n    toggleSelection(movie) {\r\n      const index = this.selectedMovies.indexOf(movie.title);\r\n        if (index === -1) {\r\n        // 선택되지 않았다면 추가\r\n          this.selectedMovies.push(movie.title);\r\n          this.selectedPosterUrl = movie.posterUrl;\r\n        } else {\r\n        // 선택되었다면 제거\r\n          this.selectedMovies.splice(index, 1);\r\n        }\r\n      },\r\n      isMovieSelected(movie) {\r\n        return this.selectedMovies.includes(movie.title); // 선택 여부 확인\r\n      },\r\n      completeSelection() {\r\n        console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .movie-poster {\r\n    text-align: center;\r\n  }\r\n  .centered-img {\r\n    display: block;\r\n    margin: auto;\r\n  }\r\n  .init-movie {\r\n    color: gray; \r\n    background-color: white; \r\n    text-align: center;\r\n    padding: 10px;\r\n  }\r\n  .v-img {\r\n    width: 100%;\r\n    height: auto; \r\n  }\r\n  .v-card {\r\n    position: relative;\r\n    text-align: center;\r\n  }\r\n  .fixed-poster {\r\n    position: fixed;\r\n    top: 10px; \r\n    left: 10px; \r\n    z-index: 1000;\r\n  }\r\n  .genre-col {\r\n    margin-bottom: 50px;\r\n  }\r\n  .genre-row {\r\n    padding-left: 70px;\r\n    padding-right: 70px;\r\n  }\r\n  .poster-row {\r\n    padding-left: 70px;\r\n    padding-right: 70px;\r\n  }\r\n  .selected::after {\r\n    content: \"\";\r\n    position: absolute; /* 오버레이를 위해 절대 위치 설정 */\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.4); /* 반투명 회색 오버레이 */\r\n  }\r\n  .complete-btn {\r\n    display: block;\r\n    text-align: center;\r\n    padding: 10px; \r\n  }\r\n  .button-col {\r\n    padding-left: 80px;\r\n    padding-right: 80px;\r\n  }\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}