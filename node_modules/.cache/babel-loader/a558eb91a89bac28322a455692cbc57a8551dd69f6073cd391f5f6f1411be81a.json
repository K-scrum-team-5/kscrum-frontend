{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f74b70a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"init-movie\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"영화 초기 선택\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"평소 취향의 영화를 선택하십시오\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"fixed-posters\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\",\n    \"no-gutters\": \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" 고정된 영역에 겹쳐진 3개의 포스터 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.recentSelectedMovies, (movie, index) => {\n      return _openBlock(), _createBlock(_component_v_card, {\n        key: movie.title,\n        class: \"stacked-poster\",\n        style: _normalizeStyle({\n          left: `${index * 20}px`\n        }),\n        \"<!--\": \"\",\n        \"각\": \"\",\n        \"포스터가\": \"\",\n        \"겹쳐\": \"\",\n        \"보이도록\": \"\",\n        \"위치\": \"\",\n        \"조정\": \"\",\n        \"--\": \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" > \"), _createVNode(_component_v_img, {\n          src: movie.posterUrl,\n          \"aspect-ratio\": \"0.66\",\n          contain: \"\",\n          width: \"80px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(movie.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"style\"]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 다른 내용 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: genre.name,\n        class: \"genre-col\"\n      }, [_createVNode(_component_v_row, {\n        class: \"genre-row\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(genre.name), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, {\n        class: \"poster-row\",\n        justify: \"center\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 포스터 중앙 정렬 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genre.movies, movie => {\n          return _openBlock(), _createBlock(_component_v_col, {\n            key: movie.title,\n            cols: \"6\",\n            md: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              onClick: $event => $options.toggleSelection(movie),\n              class: _normalizeClass(_ctx.isMovieSelected(movie) ? 'selected' : '')\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_img, {\n                src: movie.posterUrl,\n                \"aspect-ratio\": \"0.66\",\n                contain: \"\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(movie.title), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 완료 버튼 \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"button-col\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.completeSelection,\n          color: \"gray\",\n          block: \"\",\n          large: \"\",\n          class: \"complete-btn\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 완료 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","fluid","default","_withCtx","_hoisted_1","_createCommentVNode","_hoisted_2","_createElementBlock","_Fragment","_renderList","$options","recentSelectedMovies","movie","index","_component_v_card","key","title","style","_normalizeStyle","left","_createTextVNode","_createVNode","_component_v_img","src","posterUrl","contain","width","_component_v_card_title","_toDisplayString","_","$data","genres","genre","name","_component_v_row","_component_v_col","justify","movies","cols","md","onClick","$event","toggleSelection","_normalizeClass","_ctx","isMovieSelected","_component_v_btn","completeSelection","color","block","large"],"sources":["C:\\Users\\82105\\se_project\\src\\views\\Init_movie.vue"],"sourcesContent":["<template>\r\n  <v-container fluid no-gutters>\r\n    <div class=\"init-movie\">\r\n      <h1>영화 초기 선택</h1>\r\n      <p>평소 취향의 영화를 선택하십시오</p>\r\n    </div>\r\n\r\n    <!-- 고정된 영역에 겹쳐진 3개의 포스터 -->\r\n    <div class=\"fixed-posters\">\r\n      <v-card \r\n        v-for=\"(movie, index) in recentSelectedMovies\" \r\n        :key=\"movie.title\" \r\n        class=\"stacked-poster\" \r\n        :style=\"{ left: `${index * 20}px` }\" <!-- 각 포스터가 겹쳐 보이도록 위치 조정 -->\r\n      >\r\n        <v-img\r\n          :src=\"movie.posterUrl\" \r\n          aspect-ratio=\"0.66\"\r\n          contain\r\n          width=\"80px\"\r\n        >\r\n          <v-card-title>{{ movie.title }}</v-card-title>\r\n        </v-img>\r\n      </v-card>\r\n    </div>\r\n\r\n    <!-- 다른 내용 -->\r\n    <div v-for=\"genre in genres\" :key=\"genre.name\" class=\"genre-col\">\r\n      <v-row class=\"genre-row\">\r\n        <v-col>\r\n          <h2>{{ genre.name }}</h2>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row class=\"poster-row\" justify=\"center\"> <!-- 포스터 중앙 정렬 -->\r\n        <v-col v-for=\"movie in genre.movies\" :key=\"movie.title\" cols=\"6\" md=\"2\">\r\n          <v-card \r\n            @click=\"toggleSelection(movie)\" \r\n            :class=\"isMovieSelected(movie) ? 'selected' : ''\"\r\n          >\r\n            <v-img \r\n              :src=\"movie.posterUrl\" \r\n              aspect-ratio=\"0.66\"\r\n              contain\r\n            >\r\n              <v-card-title>{{ movie.title }}</v-card-title>\r\n            </v-img>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n\r\n    <!-- 완료 버튼 -->\r\n    <v-row>\r\n      <v-col class=\"button-col\">\r\n        <v-btn \r\n          @click=\"completeSelection\" \r\n          color=\"gray\"\r\n          block\r\n          large  \r\n          class=\"complete-btn\"\r\n        >\r\n          완료\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { genres } from '@/data/genres';\r\n\r\nexport default {\r\n  name: 'Init_movie',\r\n  data() {\r\n    return {\r\n      genres,\r\n      selectedMovies: [], // 선택된 영화 리스트\r\n    };\r\n  },\r\n  computed: {\r\n    recentSelectedMovies() {\r\n      // 최근 3개의 선택된 포스터 반환\r\n      return this.selectedMovies.slice(-3); // 배열의 마지막 3개 항목\r\n    },\r\n  },\r\n  methods: {\r\n    toggleSelection(movie) {\r\n      const index = this.selectedMovies.findIndex(m => m.title === movie.title);\r\n      if (index === -1) {\r\n        this.selectedMovies.push(movie); // 선택된 영화 추가\r\n      } else {\r\n        this.selectedMovies.splice(index, 1); // 선택된 영화 제거\r\n      }\r\n    },\r\n    completeSelection() {\r\n      console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.init-movie {\r\n  color: gray; \r\n  background-color: white; \r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.fixed-posters {\r\n  position: fixed; \r\n  top: 20px; \r\n  left: 20px; \r\n  z-index: 1000; /* 다른 요소 위에 고정 */\r\n}\r\n\r\n.stacked-poster {\r\n  position: absolute; \r\n  z-index: 10; \r\n  text-align: center; \r\n  border: 1px solid #ccc; \r\n  padding: 10px;\r\n  top: 0;\r\n}\r\n\r\n.centered-img {\r\n  display: block; \r\n  margin: auto; \r\n}\r\n\r\n.selected::after {\r\n  content: \"\"; \r\n  position: absolute; \r\n  top: 0; \r\n  left: 0;\r\n  right: 0; \r\n  bottom: 0; \r\n  background-color: rgba(0, 0, 0, 0.4); \r\n}\r\n\r\n.complete-btn {\r\n  display: block; \r\n  text-align: center; \r\n  padding: 10px;\r\n}\r\n\r\n.button-col {\r\n  padding-left: 80px; \r\n  padding-right: 80px; \r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}