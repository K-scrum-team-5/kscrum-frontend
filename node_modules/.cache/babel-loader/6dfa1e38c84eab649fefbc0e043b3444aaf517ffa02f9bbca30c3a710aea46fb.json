{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { genres } from '@/data/genres';\nexport default {\n  name: 'Init_movie',\n  data() {\n    return {\n      genres,\n      selectedMovies: [] // 선택된 영화 리스트\n    };\n  },\n  computed: {\n    recentSelectedMovies() {\n      // 최근 3개의 선택된 포스터 반환\n      return this.selectedMovies.slice(-3); // 배열의 마지막 3개 항목\n    }\n  },\n  methods: {\n    toggleSelection(movie) {\n      const index = this.selectedMovies.findIndex(m => m.title === movie.title);\n      if (index === -1) {\n        this.selectedMovies.push(movie); // 선택된 영화 추가\n      } else {\n        this.selectedMovies.splice(index, 1); // 선택된 영화 제거\n      }\n    },\n    completeSelection() {\n      console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\n    }\n  }\n};","map":{"version":3,"names":["genres","name","data","selectedMovies","computed","recentSelectedMovies","slice","methods","toggleSelection","movie","index","findIndex","m","title","push","splice","completeSelection","console","log"],"sources":["C:\\Users\\82105\\se_project\\src\\views\\Init_movie.vue"],"sourcesContent":["<template>\r\n  <v-container fluid no-gutters>\r\n    <div class=\"init-movie\">\r\n      <h1>영화 초기 선택</h1>\r\n      <p>평소 취향의 영화를 선택하십시오</p>\r\n    </div>\r\n\r\n    <!-- 고정된 영역에 겹쳐진 3개의 포스터 -->\r\n    <div class=\"fixed-posters\">\r\n      <v-card \r\n        v-for=\"(movie, index) in recentSelectedMovies\" \r\n        :key=\"movie.title\" \r\n        class=\"stacked-poster\" \r\n        :style=\"{ left: `${index * 20}px` }\" <!-- 각 포스터가 겹쳐 보이도록 위치 조정 -->\r\n      >\r\n        <v-img\r\n          :src=\"movie.posterUrl\" \r\n          aspect-ratio=\"0.66\"\r\n          contain\r\n          width=\"80px\"\r\n        >\r\n          <v-card-title>{{ movie.title }}</v-card-title>\r\n        </v-img>\r\n      </v-card>\r\n    </div>\r\n\r\n    <!-- 다른 내용 -->\r\n    <div v-for=\"genre in genres\" :key=\"genre.name\" class=\"genre-col\">\r\n      <v-row class=\"genre-row\">\r\n        <v-col>\r\n          <h2>{{ genre.name }}</h2>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row class=\"poster-row\" justify=\"center\"> <!-- 포스터 중앙 정렬 -->\r\n        <v-col v-for=\"movie in genre.movies\" :key=\"movie.title\" cols=\"6\" md=\"2\">\r\n          <v-card \r\n            @click=\"toggleSelection(movie)\" \r\n            :class=\"isMovieSelected(movie) ? 'selected' : ''\"\r\n          >\r\n            <v-img \r\n              :src=\"movie.posterUrl\" \r\n              aspect-ratio=\"0.66\"\r\n              contain\r\n            >\r\n              <v-card-title>{{ movie.title }}</v-card-title>\r\n            </v-img>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n\r\n    <!-- 완료 버튼 -->\r\n    <v-row>\r\n      <v-col class=\"button-col\">\r\n        <v-btn \r\n          @click=\"completeSelection\" \r\n          color=\"gray\"\r\n          block\r\n          large  \r\n          class=\"complete-btn\"\r\n        >\r\n          완료\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { genres } from '@/data/genres';\r\n\r\nexport default {\r\n  name: 'Init_movie',\r\n  data() {\r\n    return {\r\n      genres,\r\n      selectedMovies: [], // 선택된 영화 리스트\r\n    };\r\n  },\r\n  computed: {\r\n    recentSelectedMovies() {\r\n      // 최근 3개의 선택된 포스터 반환\r\n      return this.selectedMovies.slice(-3); // 배열의 마지막 3개 항목\r\n    },\r\n  },\r\n  methods: {\r\n    toggleSelection(movie) {\r\n      const index = this.selectedMovies.findIndex(m => m.title === movie.title);\r\n      if (index === -1) {\r\n        this.selectedMovies.push(movie); // 선택된 영화 추가\r\n      } else {\r\n        this.selectedMovies.splice(index, 1); // 선택된 영화 제거\r\n      }\r\n    },\r\n    completeSelection() {\r\n      console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.init-movie {\r\n  color: gray; \r\n  background-color: white; \r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.fixed-posters {\r\n  position: fixed; \r\n  top: 20px; \r\n  left: 20px; \r\n  z-index: 1000; /* 다른 요소 위에 고정 */\r\n}\r\n\r\n.stacked-poster {\r\n  position: absolute; \r\n  z-index: 10; \r\n  text-align: center; \r\n  border: 1px solid #ccc; \r\n  padding: 10px;\r\n  top: 0;\r\n}\r\n\r\n.centered-img {\r\n  display: block; \r\n  margin: auto; \r\n}\r\n\r\n.selected::after {\r\n  content: \"\"; \r\n  position: absolute; \r\n  top: 0; \r\n  left: 0;\r\n  right: 0; \r\n  bottom: 0; \r\n  background-color: rgba(0, 0, 0, 0.4); \r\n}\r\n\r\n.complete-btn {\r\n  display: block; \r\n  text-align: center; \r\n  padding: 10px;\r\n}\r\n\r\n.button-col {\r\n  padding-left: 80px; \r\n  padding-right: 80px; \r\n}\r\n</style>"],"mappings":";AAsEA,SAASA,MAAK,QAAS,eAAe;AAEtC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLF,MAAM;MACNG,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,oBAAoBA,CAAA,EAAG;MACrB;MACA,OAAO,IAAI,CAACF,cAAc,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,KAAK,EAAE;MACrB,MAAMC,KAAI,GAAI,IAAI,CAACP,cAAc,CAACQ,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,KAAI,KAAMJ,KAAK,CAACI,KAAK,CAAC;MACzE,IAAIH,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACP,cAAc,CAACW,IAAI,CAACL,KAAK,CAAC,EAAE;MACnC,OAAO;QACL,IAAI,CAACN,cAAc,CAACY,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC,EAAE;MACxC;IACF,CAAC;IACDM,iBAAiBA,CAAA,EAAG;MAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACf,cAAc,CAAC,EAAE;IAC5D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}