{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f74b70a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"init-movie\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"영화 초기 선택\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"평소 취향의 영화를 선택하십시오\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\",\n    \"no-gutters\": \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: genre.name,\n        class: \"genre-col\"\n      }, [_createVNode(_component_v_row, {\n        class: \"genre-row\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"1\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(genre.name), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, {\n        class: \"poster-row\",\n        justify: \"center\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genre.movies, movie => {\n          return _openBlock(), _createBlock(_component_v_col, {\n            key: movie.title,\n            cols: \"6\",\n            md: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              onClick: $event => $options.toggleSelection(movie),\n              class: _normalizeClass([$options.isMovieSelected(movie) ? 'selected' : '', \"centered-card\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_img, {\n                src: movie.posterUrl,\n                \"aspect-ratio\": \"0.66\",\n                contain: \"\",\n                class: \"centered-img\"\n              }, null, 8 /* PROPS */, [\"src\"]), _createVNode(_component_v_card_title, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(movie.title), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"button-col\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.completeSelection,\n          color: \"gray\",\n          block: \"\",\n          large: \"\",\n          class: \"complete-btn\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 완 료 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","fluid","default","_withCtx","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","genres","genre","key","name","_createVNode","_component_v_row","_component_v_col","cols","_toDisplayString","_","justify","movies","movie","title","md","_component_v_card","onClick","$event","$options","toggleSelection","_normalizeClass","isMovieSelected","_component_v_img","src","posterUrl","contain","_component_v_card_title","_createTextVNode","_component_v_btn","completeSelection","color","block","large"],"sources":["C:\\Users\\82105\\se_project\\src\\views\\Init_movie.vue"],"sourcesContent":["<template>\r\n    <v-container fluid no-gutters>\r\n      <div class=\"init-movie\">\r\n        <h1>영화 초기 선택</h1>\r\n        <p>평소 취향의 영화를 선택하십시오</p>\r\n      </div>\r\n\r\n      <div v-for=\"genre in genres\" :key=\"genre.name\" class=\"genre-col\">\r\n        <v-row class=\"genre-row\">\r\n          <v-col cols=\"1\">\r\n            <h2>{{ genre.name }}</h2>\r\n          </v-col>\r\n        </v-row>\r\n\r\n        <v-row class=\"poster-row\" justify=\"center\">\r\n          <v-col v-for=\"movie in genre.movies\" :key=\"movie.title\" cols=\"6\" md=\"2\">\r\n            <v-card \r\n              @click=\"toggleSelection(movie)\" \r\n              :class=\"isMovieSelected(movie) ? 'selected' : ''\"\r\n              class=\"centered-card\"\r\n              >\r\n              <v-img \r\n                :src=\"movie.posterUrl\" \r\n                aspect-ratio=\"0.66\"\r\n                contain\r\n                class=\"centered-img\"\r\n              />\r\n              <v-card-title>{{ movie.title }}</v-card-title>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </div>\r\n\r\n      <v-row>\r\n        <v-col class=\"button-col\">\r\n          <v-btn \r\n            @click=\"completeSelection\" \r\n            color=\"gray\"\r\n            block\r\n            large  \r\n            class=\"complete-btn\"\r\n          >\r\n            완 료\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { genres } from '@/data/genres';\r\n  export default {\r\n    name: 'Init_movie',\r\n    data() {\r\n        return {\r\n            genres,\r\n            selectedMovies: [],\r\n        };\r\n    },\r\n    methods: {\r\n    toggleSelection(movie) {\r\n      const index = this.selectedMovies.indexOf(movie.title);\r\n        if (index === -1) {\r\n        // 선택되지 않았다면 추가\r\n          this.selectedMovies.push(movie.title);\r\n        } else {\r\n        // 선택되었다면 제거\r\n          this.selectedMovies.splice(index, 1);\r\n        }\r\n      },\r\n      isMovieSelected(movie) {\r\n        return this.selectedMovies.includes(movie.title); // 선택 여부 확인\r\n      },\r\n      completeSelection() {\r\n        console.log(\"Selection completed:\", this.selectedMovies); // 완료 이벤트 처리\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .movie-poster {\r\n    text-align: center;\r\n  }\r\n  .centered-img {\r\n    display: block;\r\n    margin: auto;\r\n  }\r\n  .init-movie {\r\n    color: gray; \r\n    background-color: white; \r\n    text-align: center;\r\n    padding: 10px;\r\n  }\r\n  .v-img {\r\n    width: 100%;\r\n    height: auto; \r\n  }\r\n  .v-card {\r\n    position: relative;\r\n    text-align: center;\r\n  }\r\n  .genre-col {\r\n    margin-bottom: 50px;\r\n  }\r\n  .genre-row {\r\n    padding-left: 0px;\r\n\r\n  }\r\n  .poster-row {\r\n    padding-left: 70px;\r\n    padding-right: 70px;\r\n  }\r\n  .selected::after {\r\n    content: \"\";\r\n    position: absolute; /* 오버레이를 위해 절대 위치 설정 */\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.4); /* 반투명 회색 오버레이 */\r\n  }\r\n  .complete-btn {\r\n    display: block;\r\n    text-align: center;\r\n    padding: 10px; \r\n  }\r\n  .button-col {\r\n    padding-left: 80px;\r\n    padding-right: 80px;\r\n  }\r\n  </style>\r\n"],"mappings":";;gEAEMA,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAY,I,aACrBD,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAwB,WAArB,mBAAiB,E;;;;;;;;;uBAHxBE,YAAA,CA6CcC,sBAAA;IA7CDC,KAAK,EAAL,EAAK;IAAC,YAAU,EAAV;;IADvBC,OAAA,EAAAC,QAAA,CAEM,MAGM,CAHNC,UAGM,G,kBAENC,mBAAA,CAwBMC,SAAA,QA/BZC,WAAA,CAO2BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;2BAAjBL,mBAAA,CAwBM;QAxBwBM,GAAG,EAAED,KAAK,CAACE,IAAI;QAAEd,KAAK,EAAC;UACnDe,YAAA,CAIQC,gBAAA;QAJDhB,KAAK,EAAC;MAAW;QARhCI,OAAA,EAAAC,QAAA,CASU,MAEQ,CAFRU,YAAA,CAEQE,gBAAA;UAFDC,IAAI,EAAC;QAAG;UATzBd,OAAA,EAAAC,QAAA,CAUY,MAAyB,CAAzBN,mBAAA,CAAyB,YAAAoB,gBAAA,CAAlBP,KAAK,CAACE,IAAI,iB;UAV7BM,CAAA;;QAAAA,CAAA;oCAcQL,YAAA,CAgBQC,gBAAA;QAhBDhB,KAAK,EAAC,YAAY;QAACqB,OAAO,EAAC;;QAd1CjB,OAAA,EAAAC,QAAA,CAeiB,MAA6B,E,kBAApCE,mBAAA,CAcQC,SAAA,QA7BlBC,WAAA,CAeiCG,KAAK,CAACU,MAAM,EAArBC,KAAK;+BAAnBtB,YAAA,CAcQgB,gBAAA;YAd8BJ,GAAG,EAAEU,KAAK,CAACC,KAAK;YAAEN,IAAI,EAAC,GAAG;YAACO,EAAE,EAAC;;YAf9ErB,OAAA,EAAAC,QAAA,CAgBY,MAYS,CAZTU,YAAA,CAYSW,iBAAA;cAXNC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACP,KAAK;cAC5BvB,KAAK,EAlBpB+B,eAAA,EAkBsBF,QAAA,CAAAG,eAAe,CAACT,KAAK,qBACvB,eAAe;;cAnBnCnB,OAAA,EAAAC,QAAA,CAqBc,MAKE,CALFU,YAAA,CAKEkB,gBAAA;gBAJCC,GAAG,EAAEX,KAAK,CAACY,SAAS;gBACrB,cAAY,EAAC,MAAM;gBACnBC,OAAO,EAAP,EAAO;gBACPpC,KAAK,EAAC;gDAERe,YAAA,CAA8CsB,uBAAA;gBA3B5DjC,OAAA,EAAAC,QAAA,CA2B4B,MAAiB,CA3B7CiC,gBAAA,CAAAnB,gBAAA,CA2B+BI,KAAK,CAACC,KAAK,iB;gBA3B1CJ,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;;;QAAAA,CAAA;;oCAiCML,YAAA,CAYQC,gBAAA;MA7CdZ,OAAA,EAAAC,QAAA,CAkCQ,MAUQ,CAVRU,YAAA,CAUQE,gBAAA;QAVDjB,KAAK,EAAC;MAAY;QAlCjCI,OAAA,EAAAC,QAAA,CAmCU,MAQQ,CARRU,YAAA,CAQQwB,gBAAA;UAPLZ,OAAK,EAAEE,QAAA,CAAAW,iBAAiB;UACzBC,KAAK,EAAC,MAAM;UACZC,KAAK,EAAL,EAAK;UACLC,KAAK,EAAL,EAAK;UACL3C,KAAK,EAAC;;UAxClBI,OAAA,EAAAC,QAAA,CAyCW,MAED,CA3CViC,gBAAA,CAyCW,OAED,E;UA3CVlB,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}